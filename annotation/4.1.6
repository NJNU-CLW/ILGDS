学校操场北边墙上满是爬山虎。
(x7 / 爬山虎
      :location  (x4 / 墙上
            :extent  (x5 / 满
)            :location  (x3 / 北边
                  :arg0  (x2 / 操场
                        :poss  (x1 / 学校
)))))
===========================
我家也有爬山虎，从小院的西墙爬上去，在房顶上占了一大片地方。
(x24 / and
      :op1  (x3 / 有-03
            :arg0  (x1_2 / 家
                  :poss  (x1_1 / 我
))            :arg1  (x4 / 爬山虎
))      :op2  (x11 / 爬-01
            :cause-of  (x12 / 上去-01
                  :arg0  (x4 / 爬山虎
))            :source  (x10 / 墙
                  :mod  (x9 / 西
)                  :location  (x7 / 小院
))            :arg0  (x4 / 爬山虎
))      :op3  (x17 / 占-02
            :aspect  (x18 / 了
)            :arg0  (x4 / 爬山虎
)            :arg1  (x22 / 地方
                  :cunit  (x21 / 片
                        :mod  (x20 / 大
))                  :quant  (x19 / 1
))            :location  (x16 / 上
                  :arg0  (x15 / 房顶
))))
===========================
爬山虎刚长出来的叶子是嫩红的，不几天叶子长大，就变成嫩绿的。
(x22 / temporal
      :arg1  (x9 / 红-01
            :mod  (x8 / 嫩
)            :arg0  (x6 / 叶子
                  :arg1-of  (x3_x5 / 长-01
                        :arg0  (x1 / 爬山虎
)))            :mode  (x7_x10 / judgement
))      :arg2  (x32 / condition
            :arg1  (x15 / 长大-01
                  :arg0  (x14 / x6
)                  :duration  (x12_x13 / 不几天
))            :arg2  (x18 / 变成-01
                  :arg1  (x6 / 叶子
)                  :arg2  (x19_x20 / 嫩绿
))))
===========================
爬山虎的嫩叶，不大引人注意，引人注意的是长大的叶子。
(x16 / and
      :op1  (x6 / 引人注意
            :polarity  (x5 / -
)            :arg0  (x3 / 嫩叶
                  :part-of  (x1 / 爬山虎
)))      :op2  (x14 / 叶子
            :arg0-of  (x11_x12 / 长大-01
)            :domain  (x22 / thing
                  :arg0-of  (x8 / 引人注意
))))
===========================
那些叶子绿得那么新鲜，看着非常舒服。
(x13 / causation
      :arg1  (x3 / 绿-01
            :degree  (x6 / 新鲜-01
                  :mod  (x5 / 那么
)                  :arg0  (x2 / 叶子
                        :mod  (x1 / 那些
)))            :arg1  (x2 / 叶子
))      :arg2  (x20 / condition
            :arg1  (x8 / 看-02
                  :aspect  (x9 / 着
)                  :arg1  (x2 / 叶子
))            :arg2  (x11 / 舒服
                  :degree  (x10 / 非常
))))
===========================
叶尖一顺儿朝下，在墙上铺得那么均匀，没有重叠起来的，也不留一点儿空隙。
(x26 / and
      :op1  (x5 / 朝
            :manner  (x2_x3_x4 / 一顺儿
)            :arg0  (x1 / 叶尖
)            :arg1  (x6 / 下
))      :op2  (x10 / 铺
            :manner  (x13 / 均匀
                  :degree  (x12 / 那么
))            :location  (x9 / 墙上
))      :op3  (x15_2 / 有-03
            :polarity  (x15_1 / -
)            :arg1  (x38 / thing
                  :arg0-of  (x16_x17 / 重叠-01
)))      :op4  (x22 / 留-02
            :polarity  (x21 / -
)            :arg1  (x24 / 空隙
                  :quant  (x23 / 一点儿
))))
===========================
一阵风拂过，一墙的叶子就漾起波纹，好看得很。
(x19 / condition
      :arg2  (x28 / and
            :op1  (x11 / 漾-01
                  :cause-of  (x12 / 起-05
                        :arg0  (x13 / 波纹
))                  :arg0  (x9 / 叶子
                        :cunit  (x7 / 墙
)                        :quant  (x6 / 1
)))            :op2  (x15 / 好看
                  :degree  (x17 / 很
)))      :arg1  (x3_x4 / 拂-01
            :arg0  (x2 / 风
                  :cunit  (x1_2 / 阵
)                  :quant  (x1_1 / 1
))))
===========================
以前，我只知道这种植物叫爬山虎，可不知道它怎么能爬。
(x19 / contrast
      :time  (x1 / 以前
)      :arg1  (x5 / 知道-01
            :arg0  (x3 / 我
)            :mod  (x4 / 只
)            :arg1  (x8 / 叫-01
                  :arg0  (x7 / 植物
                        :cunit  (x6_2 / 种
)                        :mod  (x6_1 / 这
))                  :arg1  (x9 / 爬山虎
)))      :arg2  (x13 / 知道-01
            :polarity  (x12 / -
)            :arg0  (x3 / 我
)            :arg1  (x16 / 能-01
                  :cause  (x15 / amr-unknown
)                  :arg0  (x17 / 爬-01
                        :arg0  (x14 / x7
)))))
===========================
今年，我注意了，原来爬山虎是有脚的。
(x14 / and
      :op1  (x4 / 注意-02
            :arg0  (x3 / 我
)            :aspect  (x5 / 了
)            :time  (x1 / 今年
))      :op2  (x7 / 原来-01
            :arg0  (x10 / 有-01
                  :arg0  (x8 / 爬山虎
)                  :arg1  (x11 / 脚
)                  :mode  (x9_x12 / judgement
))))
===========================
爬山虎的脚长在茎上。
(x4 / 长-01
      :arg1  (x3 / 脚
            :part-of  (x1 / 爬山虎
))      :arg0  (x6 / 茎
            :part-of  (x1 / 爬山虎
)))
===========================
茎上长叶柄的地方，反而伸出枝状的六七根细丝，每根细丝像蜗牛的触角。
(x25 / and
      :op1  (x9 / 伸出-01
            :arg1  (x15 / 细丝
                  :quant  (x29 / between
                        :op1  (x13_1 / 6
)                        :op2  (x13_2 / 7
))                  :cunit  (x14 / 根
)                  :arg0-of  (x10_x11 / 树状
))            :mod  (x8 / 反而
)            :location  (x6 / 地方
                  :arg0-of  (x3 / 长-01
                        :location  (x1 / 茎
)                        :arg1  (x4 / 叶柄
))))      :op2  (x20 / 像-01
            :arg0  (x19 / 细丝
                  :mod  (x17 / 每
)                  :cunit  (x18 / 根
)                  :arg1-of  (x45 / include-91
                        :arg2  (x15 / 细丝
)))            :arg1  (x23 / 触角
                  :part-of  (x21 / 蜗牛
))))
===========================
细丝跟新叶子一样，也是嫩红的。
(x10 / 红-01
      :mod  (x9 / 嫩
)      :mode  (x8_x11 / judgement
)      :mod  (x7 / 也
)      :arg0  (x1 / 细丝
            :arg0-of  (x5 / 一样-01
                  :arg1  (x4 / 叶子
                        :arg0-of  (x3 / 新-01
)))))
===========================
这就是爬山虎的脚。
(x6 / 脚
      :part-of  (x4 / 爬山虎
)      :mod  (x2 / 就
)      :domain  (x1 / 这
))
===========================
爬山虎的脚触着墙的时候，六七根细丝的头上就变成小圆片，巴住墙。
(x26 / condition
      :arg1  (x4 / 触
            :aspect  (x5 / 着
)            :arg0  (x3 / 脚
                  :part-of  (x1 / 爬山虎
))            :arg1  (x6 / 墙
))      :arg2  (x33 / and
            :op1  (x17 / 变成-01
                  :arg1  (x37 / thing
                        :location  (x15 / 上
                              :arg0  (x14 / 头
                                    :part-of  (x12 / 细丝
                                          :quant  (x41 / between
                                                :op1  (x10_1 / 6
)                                                :op2  (x10_2 / 7
))                                          :cunit  (x11 / 根
)))))                  :arg2  (x20 / 片
                        :arg0-of  (x19 / 圆-02
)                        :arg0-of  (x18 / 小-01
)))            :op2  (x22 / 巴
                  :arg1  (x24 / 墙
)                  :arg0  (x20 / 片
))))
===========================
细丝原先是直的，现在弯曲了，把爬山虎的嫩茎拉一把，使它紧贴在墙上。
(x27 / and
      :op1  (x29 / contrast
            :arg1  (x4 / 直
                  :mode  (x3_x5 / judgement
)                  :arg0  (x1 / 细丝
)                  :time  (x2 / 原先
))            :arg2  (x8 / 弯曲-01
                  :arg0  (x1 / 细丝
)                  :time  (x7 / 现在
)                  :aspect  (x9 / 了
)))      :op2  (x16_x17_x18 / 拉-01
            :arg1  (x15 / 茎
                  :arg0-of  (x14 / 嫩-01
)                  :part-of  (x12 / 爬山虎
))            :purpose  (x20 / 使-01
                  :arg1  (x21 / x15
)                  :arg2  (x23 / 贴
                        :location  (x25 / 墙上
)                        :manner  (x22 / 紧
)))))
===========================
爬山虎就是这样一脚一脚地往上爬。
(x12 / 爬-01
      :manner  (x5_x6_x7_x8 / 一脚一脚
)      :direction  (x11 / 上
)      :arg0  (x1 / 爬山虎
)      :manner  (x4 / 这样
))
===========================
如果你仔细看那些细小的脚，你会想起图画上蛟龙的爪子。
(x19 / condition
      :arg1  (x4 / 看
            :manner  (x3 / 仔细
)            :arg0  (x2 / 你
)            :arg1  (x8 / 脚
                  :arg0-of  (x6 / 细小
)                  :mod  (x5 / 那些
)))      :arg2  (x12 / 想起-01
            :arg0  (x10 / x2
)            :arg1  (x17 / 爪子
                  :part-of  (x15 / 蛟龙
)                  :location  (x13 / 图画
))))
===========================
爬山虎的脚要是没触着墙，不几天就萎了，后来连痕迹也没有了。
(x24 / condition
      :arg1  (x7 / 触
            :arg1  (x9 / 墙
)            :arg0  (x3 / 脚
                  :part-of  (x1 / 爬山虎
)))      :arg2  (x27 / temporal
            :arg1  (x14 / 萎-01
                  :time  (x11_x12 / 不几天
)                  :arg0  (x1 / 爬山虎
)                  :aspect  (x15 / 了
))            :arg2  (x21_2 / 有-03
                  :polarity  (x21_1 / -
)                  :aspect  (x22 / 了
)                  :arg1  (x19 / 痕迹
))))
===========================
触着墙的，细丝和小圆片逐渐变成灰色。
(x15 / condition
      :arg1  (x1 / 触
            :arg1  (x3 / 墙
))      :arg2  (x12 / 变成-01
            :arg1  (x7 / and
                  :op1  (x6 / 细丝
)                  :op2  (x10 / 片
                        :arg0-of  (x9 / 圆-02
)                        :arg0-of  (x8 / 小-01
)))            :arg2  (x13 / 灰色
)            :manner  (x11 / 逐渐
)))
===========================
不要瞧不起那些灰色的脚，那些脚巴在墙上相当牢固，要是你的手指不费一点儿劲，休想拉下爬山虎的一根茎。
(x34 / causation
      :arg2  (x1_2 / 要-03
            :arg0  (x2 / 瞧不起-01
                  :arg1  (x6 / 脚
                        :arg0-of  (x4 / 灰色
)                        :mod  (x3 / 那些
)))            :polarity  (x1_1 / -
))      :arg1  (x43 / causation
            :arg1  (x14 / 牢固-01
                  :arg0  (x10 / 巴
                        :arg0  (x9 / x6
                              :mod  (x8 / 那些
))                        :location  (x12 / 墙上
))                  :degree  (x13 / 相当
))            :arg2  (x50 / condition
                  :arg1  (x22 / 费-01
                        :arg0  (x20 / 手指
                              :part-of  (x18 / 你
))                        :polarity  (x21 / -
)                        :arg1  (x24 / 劲
                              :quant  (x23 / 一点儿
)))                  :arg2  (x26 / 休想-01
                        :arg1  (x27 / 拉-01
                              :cause-of  (x28 / 下-01
                                    :arg0  (x32_2 / 茎
                                          :quant  (x31 / 1
)                                          :cunit  (x32_1 / 根
)                                          :part-of  (x29 / 爬山虎
)))                              :arg1  (x32_2 / 茎
)                              :arg0  (x20 / 手指
))))))
===========================
